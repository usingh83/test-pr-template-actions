name: PR Maintainer Bot
on:
  pull_request_target:
    types: [opened, edited, reopened, synchronize]

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  update-and-comment:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Update PR body and post questionnaires
        uses: actions/github-script@v6
        with:
          script: |
            (async ({ github, context, core }) => {
              const owner = context.repo.owner;
              const repo = context.repo.repo;
              const pr = context.payload.pull_request;
              if (!pr) {
                core.info('No pull_request in context; exiting.');
                return;
              }
              const prNumber = pr.number;

              // Read approvers file (if present)
              let approvers = [];
              try {
                const resp = await github.rest.repos.getContent({
                  owner,
                  repo,
                  path: '.github/PAR_APPROVERS',
                  ref: context.payload.pull_request.base.ref
                });
                const content = Buffer.from(resp.data.content, 'base64').toString();
                approvers = content.split('\n').map(s => s.trim()).filter(Boolean);
              } catch (e) {
                core.info('.github/PAR_APPROVERS not found or unreadable; treating as empty list.');
              }

              const markerStart = '<!-- MAINTAINER-FIELDS-START -->';
              const markerEnd = '<!-- MAINTAINER-FIELDS-END -->';
              const placeholder = '<!-- Maintainer-only fields will be added automatically -->';
              const parQuestionnaire = [
                '### PAR Approval Checklist',
                '- [ ] RMC attestation',
                '- [ ] ADA attestation',
                '- [ ] intent attestation',
                ''
              ].join('\n');

              const bypassQuestionnaire = [
                '### Bypass PAR Approval Questionnaire',
                '- [ ] Hotfix - urgent',
                '- [ ] Low-risk change',
                '- [ ] Approver judgment',
                '- [ ] Business requirement',
                ''
              ].join('\n');
            
              const questionnaireBlock = [
                '**Automated questionnaires (added by bot)**',
                '---',
                parQuestionnaire,
                '---',
                bypassQuestionnaire,
                '',
              ].join('\n');

              // Prepare maintainer-only fields to inject
              const maintainerFields = `${markerStart}
                **Maintainer-only fields (added by bot)**

                - PAR required: _\\<yes/no\\>_
                - Approver: _\\<@username\\>_
                - Approval date: _\\<YYYY-MM-DD\\>_

                _Please do not edit the above fields; they are managed by the bot._
            ${questionnaireBlock}${markerEnd}
              `;
              // Update PR body if placeholder exists and marker not present
              const body = pr.body || '';
              if (!body.includes(markerStart)) {
                if (body.includes(placeholder)) {
                  const newBody = body.replace(placeholder, `${placeholder}\n\n${maintainerFields}`);
                  await github.rest.pulls.update({
                    owner,
                    repo,
                    pull_number: prNumber,
                    body: newBody
                   });
                  core.info('PR body updated with maintainer-only fields.');
                } else {
                  // If placeholder missing but marker also missing, append at end (idempotent)
                  const newBody = `${body}\n\n${maintainerFields}`;
                  await github.rest.pulls.update({
                    owner,
                    repo,
                    pull_number: prNumber,
                    body: newBody
                  });
                  core.info('PR body appended with maintainer-only fields.');
                }
              } else {
                core.info('Maintainer fields already present; skipping body update.');
              }
            })({ github, context, core });